{"version":3,"sources":["index.js"],"names":["tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","defaultColumnProperties","sortable","width","filtering","EM","email","href","target","style","color","FB","username","TW","columnMap","preferred_name","title","state","lookup","NSW","VIC","QLD","TAS","SA","WA","ACT","NT","electorate","votes","type","render","rowData","undefined","twitter","fbook","Party","ALP","LP","NP","IND","GRN","LNP","Swing","data","numeral","format","Margin","Vote_diff","Participation","Grid","useState","rows","columns","schema","fields","map","i","field","icons","options","pageSize","pageSizeOptions","rootElement","document","getElementById","ReactDOM","className","Date","updated"],"mappings":"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","file":"static/js/main.b0b0aecf.chunk.js","sourcesContent":["import React, { useState, forwardRef } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport MaterialTable from \"material-table\"\nimport numeral from \"numeral\"\nimport { format } from \"date-fns\"\nimport data from \"./vote_data.json\"\nimport updated from \"./update_data.json\"\nimport \"./index.css\"\n\nimport EmailIcon from \"@material-ui/icons/Email\"\nimport FacebookIcon from \"@material-ui/icons/Facebook\"\nimport TwitterIcon from \"@material-ui/icons/Twitter\"\n\nimport AddBox from \"@material-ui/icons/AddBox\"\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\"\nimport Check from \"@material-ui/icons/Check\"\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\"\nimport ChevronRight from \"@material-ui/icons/ChevronRight\"\nimport Clear from \"@material-ui/icons/Clear\"\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\"\nimport Edit from \"@material-ui/icons/Edit\"\nimport FilterList from \"@material-ui/icons/FilterList\"\nimport FirstPage from \"@material-ui/icons/FirstPage\"\nimport LastPage from \"@material-ui/icons/LastPage\"\nimport Remove from \"@material-ui/icons/Remove\"\nimport SaveAlt from \"@material-ui/icons/SaveAlt\"\nimport Search from \"@material-ui/icons/Search\"\nimport ViewColumn from \"@material-ui/icons/ViewColumn\"\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n}\n\nconst defaultColumnProperties = {\n  sortable: false,\n  width: 140,\n  filtering: true,\n}\n\nconst EM = ({ email }) => (\n  <a href={\"mailto:\" + email} target=\"_new\">\n    <EmailIcon style={{ color: \"#333\" }} />\n  </a>\n)\n\nconst FB = ({ username }) => (\n  <a href={\"https://www.facebook.com/\" + username} target=\"_new\">\n    <FacebookIcon />\n  </a>\n)\n\nconst TW = ({ username }) => (\n  <a href={\"https://www.twitter.com/\" + username} target=\"_new\">\n    <TwitterIcon />\n  </a>\n)\n\nconst columnMap = {\n  preferred_name: {\n    title: \"Member Name\",\n    sortable: true,\n    width: 230,\n  },\n  state: {\n    title: \"State\",\n    sortable: true,\n    filtering: true,\n    width: 80,\n    lookup: {\n      NSW: \"NSW\",\n      VIC: \"Victoria\",\n      QLD: \"Queensland\",\n      TAS: \"Tasmania\",\n      SA: \"South Aus\",\n      WA: \"West Aus\",\n      ACT: \"ACT\",\n      NT: \"NT\",\n    },\n  },\n  electorate: {\n    title: \"Electorate\",\n  },\n  votes: {\n    title: \"Climate Votes\",\n    sortable: true,\n    type: \"numeric\",\n    filtering: false,\n  },\n  email: {\n    title: \"\",\n    filtering: false,\n    sortable: false,\n    width: 20,\n    render: rowData =>\n      rowData.email ? <EM email={rowData.email} /> : undefined,\n  },\n  twitter: {\n    title: \"\",\n    filtering: false,\n    sortable: false,\n    width: 20,\n    render: rowData =>\n      rowData.twitter ? <TW username={rowData.twitter} /> : undefined,\n  },\n  fbook: {\n    title: \"\",\n    filtering: false,\n    sortable: false,\n    width: 20,\n    render: rowData =>\n      rowData.fbook ? <FB username={rowData.fbook} /> : undefined,\n  },\n  Party: {\n    title: \"Party\",\n    sortable: true,\n    filtering: true,\n    lookup: {\n      ALP: \"Labor\",\n      LP: \"Liberal\",\n      NP: \"National\",\n      IND: \"Independent\",\n      GRN: \"Greens\",\n      LNP: \"LNP\",\n    },\n  },\n  Swing: {\n    title: \"2019 Swing (%)\",\n    sortable: true,\n    type: \"numeric\",\n    filtering: false,\n    render: data => numeral(data.Swing).format(\"+0.00\") + \"%\",\n  },\n  Margin: {\n    title: \"2019 Margin (%)\",\n    sortable: true,\n    type: \"numeric\",\n    filtering: false,\n    render: data => numeral(data.Margin).format(\"0.00\") + \"%\",\n  },\n  Vote_diff: {\n    title: \"2019 Margin Votes\",\n    sortable: true,\n    type: \"numeric\",\n    filtering: false,\n    render: data => numeral(data.Vote_diff).format(\"0,0\"),\n  },\n  Participation: {\n    title: \"Climate Participation (%)\",\n    type: \"numeric\",\n    filtering: false,\n    render: data => numeral(data.Participation).format(\"0.00\") + \"%\",\n  },\n}\n\nconst getColumns = d =>\n  d.schema.fields.map(i => ({\n    field: i[\"name\"],\n    ...defaultColumnProperties,\n    ...columnMap[i[\"name\"]],\n  }))\n\nconst Grid = () => {\n  const [rows, setRows] = useState(data.data)\n  const columns = getColumns(data)\n\n  return (\n    <MaterialTable\n      columns={columns}\n      data={rows}\n      icons={tableIcons}\n      options={{\n        filtering: true,\n        pageSize: 20,\n        pageSizeOptions: [20, 50, 100, 150],\n      }}\n      title=\"Climate Action Votes by Electorate\"\n    />\n  )\n}\n\nconst App = () => (\n  <div className=\"App\">\n    <h2>Climate Act Now Petition Data</h2>\n    <h3>\n      Vote at{\" \"}\n      <a href=\"https://www.climateactnow.com.au/\">climateactnow.com.au</a>\n    </h3>\n    <p>\n      [<a href=\"https://github.com/infotorch/climateactnow\">code</a>] by [\n      <a href=\"https://twitter.com/4dwins\">@4dwins</a>] and{\" \"}\n      <a href=\"https://github.com/infotorch\">Infotorch</a>\n    </p>\n    <p>\n      <i>\n        Last Updated:{\" \"}\n        {format(new Date(updated[\"updated\"] * 1000), \"do LLLL u 'at' HH:mm\")}{\" \"}\n      </i>\n    </p>\n    <Grid />\n  </div>\n)\n\nconst rootElement = document.getElementById(\"root\")\nReactDOM.render(<App />, rootElement)\n"],"sourceRoot":""}